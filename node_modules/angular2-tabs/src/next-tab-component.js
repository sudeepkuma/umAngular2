"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require("angular2/core");
var tabs_component_1 = require("./tabs-component");
var NextTab = (function () {
    function NextTab(anTabs) {
        this.anTabs = anTabs;
    }
    Object.defineProperty(NextTab.prototype, "cantactivate", {
        get: function () {
            return !this.tab.canActivate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NextTab.prototype, "canactivate", {
        get: function () {
            return this.tab.canActivate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NextTab.prototype, "html", {
        get: function () {
            return this.tab.title;
        },
        enumerable: true,
        configurable: true
    });
    NextTab.prototype.onClick = function () {
        this.anTabs.activateTab(this.tab.key);
    };
    Object.defineProperty(NextTab.prototype, "nextTab", {
        set: function (value) {
            var tabs = [];
            if (typeof value === 'string') {
                tabs = this.anTabs.list.tabs.filter(function (tab) { return tab.key === value; });
            }
            else {
                tabs = this.anTabs.list.tabs.filter(function (tab) { return tab.key === value.id; });
            }
            if (tabs.length > 0) {
                this.tab = tabs[0];
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.HostBinding('class.an-cantactivate'), 
        __metadata('design:type', Object)
    ], NextTab.prototype, "cantactivate", null);
    __decorate([
        core_1.HostBinding('class.an-canactivate'), 
        __metadata('design:type', Object)
    ], NextTab.prototype, "canactivate", null);
    __decorate([
        core_1.HostBinding('innerHTML'), 
        __metadata('design:type', Object)
    ], NextTab.prototype, "html", null);
    __decorate([
        core_1.HostListener('click', []), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], NextTab.prototype, "onClick", null);
    __decorate([
        core_1.Input("anNextTab"), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], NextTab.prototype, "nextTab", null);
    NextTab = __decorate([
        core_1.Directive({
            selector: "[anNextTab]"
        }),
        __param(0, core_1.Host()), 
        __metadata('design:paramtypes', [tabs_component_1.AngularNavTabs])
    ], NextTab);
    return NextTab;
}());
exports.NextTab = NextTab;
