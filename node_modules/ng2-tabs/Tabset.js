"use strict";
var core_1 = require("@angular/core");
var Tab_1 = require("./Tab");
var Tabset = (function () {
    function Tabset() {
        this.onSelect = new core_1.EventEmitter(false);
    }
    Tabset.prototype.changeActiveTab = function (tab) {
        var tabs = this.tabs.toArray();
        tabs.forEach(function (tab) { return tab.active = false; });
        tab.active = true;
        this.onSelect.emit(tabs.indexOf(tab));
    };
    Tabset.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var readTabs = _this.tabs.toArray();
            var activeTab = readTabs.find(function (tab) { return tab.active === true; });
            if (!activeTab && readTabs.length > 0)
                readTabs[0].active = true;
        });
    };
    Tabset.decorators = [
        { type: core_1.Component, args: [{
                    selector: "tabset",
                    template: "\n<div class=\"tabset\">\n    <ul class=\"nav\" [ngClass]=\"{ 'nav-tabs': !pills, 'nav-pills': pills }\">\n      <li role=\"presentation\" *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\">\n        <a (click)=\"changeActiveTab(tab)\" class=\"btn\" [class.disabled]=\"tab.disabled\">\n            <span [tabTransclude]=\"tab.headingTemplate\">{{tab.title}}</span>\n        </a>\n        \n      </li>\n    </ul>\n    <div class=\"tabset-content\">\n        <ng-content></ng-content>    \n    </div>\n</div>\n"
                },] },
    ];
    /** @nocollapse */
    Tabset.ctorParameters = function () { return []; };
    Tabset.propDecorators = {
        'pills': [{ type: core_1.Input },],
        'tabs': [{ type: core_1.ContentChildren, args: [Tab_1.Tab,] },],
        'onSelect': [{ type: core_1.Output },],
    };
    return Tabset;
}());
exports.Tabset = Tabset;
//# sourceMappingURL=Tabset.js.map